{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","dialogs","dialogsItems","active","messages","message","DialogItem","props","path","id","React","createElement","className","s","dialog","NavLink","to","name","Message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElements","map","d","messagesElements","m","AddMessageFormRedux","values","sendMessage","newMessageBody","compose","connect","dispatch","sendMessageCreator","withAuthRedirect"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,QAAA,yBAAAC,aAAA,8BAAAC,OAAA,wBAAAC,SAAA,0BAAAC,QAAA,kICaHC,EAVI,SAACC,GAClB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACEC,IAAAC,cAAA,OAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEV,QACjCO,IAAAC,cAACI,IAAO,CAACC,GAAIR,GAAOD,EAAMU,QCFjBC,EAJC,SAACX,GACf,OAAOG,IAAAC,cAAA,OAAKC,UAAWC,IAAEC,QAASP,EAAMF,0CCIpCc,EAAcC,YAAiB,IAoBtBC,cAAU,CAAEC,KAAM,2BAAlBD,CAlBQ,SAACd,GACtB,OACEG,IAAAC,cAAA,QAAMY,SAAUhB,EAAMiB,cACpBd,IAAAC,cAAA,WACED,IAAAC,cAACc,IAAK,CACJC,UAAWC,IACXC,SAAU,CAACC,IAAUV,GACrBW,YAAY,qBACZb,KAAK,oBAGTP,IAAAC,cAAA,WACED,IAAAC,cAAA,cAAQ,YCSDoB,EAzBC,SAACxB,GACf,IAAIyB,EAAQzB,EAAM0B,YAEdC,EAAkBF,EAAM/B,QAAQkC,IAAI,SAACC,GAAC,OACxC1B,IAAAC,cAACL,EAAU,CAACW,KAAMmB,EAAEnB,KAAMR,GAAI2B,EAAE3B,OAE9B4B,EAAmBL,EAAM5B,SAAS+B,IAAI,SAACG,GAAC,OAC1C5B,IAAAC,cAACO,EAAO,CAACb,QAASiC,EAAEjC,YAOtB,OACEK,IAAAC,cAAA,OAAKC,UAAWC,IAAEZ,SAChBS,IAAAC,cAAA,OAAKC,UAAWC,IAAEX,cAAegC,GACjCxB,IAAAC,cAAA,OAAKC,UAAWC,IAAET,UAChBM,IAAAC,cAAA,WAAM0B,GACN3B,IAAAC,cAAC4B,EAAmB,CAAChB,SATP,SAACiB,GACnBjC,EAAMkC,YAAYD,EAAOE,uCCIdC,sBACbC,YAdsB,SAACZ,GACvB,MAAO,CACLC,YAAaD,EAAMC,cAGI,SAACY,GAC1B,MAAO,CACLJ,YAAa,SAACC,GACZG,EAASC,YAAmBJ,QAOhCK,IAFaJ,CAGbZ","file":"static/js/1.84b57b98.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1GfAZ\",\"dialogsItems\":\"Dialogs_dialogsItems__AcyZX\",\"active\":\"Dialogs_active__3Ir5I\",\"messages\":\"Dialogs_messages__1p8_x\",\"message\":\"Dialogs_message__3J8YX\"};","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n  let path = \"/dialogs/\" + props.id;\r\n\r\n  return (\r\n    <div className={s.dialog + \" \" + s.active}>\r\n      <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogItem;\r\n","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\nconst Message = (props) => {\r\n  return <div className={s.dialog}>{props.message}</div>;\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport {\r\n  maxLengthCreator,\r\n  required,\r\n} from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          component={Textarea}\r\n          validate={[required, maxLength50]}\r\n          placeholder=\"Enter your message\"\r\n          name=\"newMessageBody\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Send</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default reduxForm({ form: \"dialog-add-message-form\" })(AddMessageForm);\r\n","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport AddMessageFormRedux from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n  let state = props.dialogsPage;\r\n\r\n  let dialogsElements = state.dialogs.map((d) => (\r\n    <DialogItem name={d.name} id={d.id} />\r\n  ));\r\n  let messagesElements = state.messages.map((m) => (\r\n    <Message message={m.message} />\r\n  ));\r\n\r\n  let addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageBody);\r\n  };\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>{dialogsElements}</div>\r\n      <div className={s.messages}>\r\n        <div>{messagesElements}</div>\r\n        <AddMessageFormRedux onSubmit={addNewMessage} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialogs;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { sendMessageCreator } from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageBody) => {\r\n      dispatch(sendMessageCreator(newMessageBody));\r\n    },\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}