{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/AddPostForm/AddPostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","descriptionBlock","postsBlock","posts","item","Post","props","React","createElement","className","s","src","message","likesCount","maxLength10","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","validate","required","placeholder","MyPosts","memo","postsElements","map","p","AddNewPostFormRedux","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","ProfileStatusWithHooks","_useState","useState","_useState2","_slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","_ref","profile","photos","large","Preloader","Profile","ProfileContainer","_React$Component","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","apply","arguments","_inherits","_createClass","key","userId","router","params","authorizedUserId","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter","withAuthRedirect"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,iBAAA,kFCAlBF,EAAAC,QAAA,CAAkBE,WAAA,4BAAAC,MAAA,6CCAlBJ,EAAAC,QAAA,CAAkBI,KAAA,sLCcHC,EAZF,SAACC,GACZ,OACEC,IAAAC,cAAA,OAAKC,UAAWC,IAAEN,MAChBG,IAAAC,cAAA,OAAKG,IAAI,iHACRL,EAAMM,QACPL,IAAAC,cAAA,WACED,IAAAC,cAAA,YAAM,QAAW,IAAEF,EAAMO,8CCD3BC,EAAcC,YAAiB,IAoBtBC,cAAU,CAAEC,KAAM,yBAAlBD,CAlBQ,SAACV,GACtB,OACEC,IAAAC,cAAA,QAAMU,SAAUZ,EAAMa,cACpBZ,IAAAC,cAAA,WACED,IAAAC,cAACY,IAAK,CACJC,UAAWC,IACXC,KAAK,cACLC,SAAU,CAACC,IAAUX,GACrBY,YAAY,wBAGhBnB,IAAAC,cAAA,WACED,IAAAC,cAAA,cAAQ,gBCCDmB,EAlBCpB,IAAMqB,KAAK,SAACtB,GAC1B,IAAIuB,EAAgBvB,EAAMH,MAAM2B,IAAI,SAACC,GAAC,OACpCxB,IAAAC,cAACH,EAAI,CAACO,QAASmB,EAAEnB,QAASC,WAAYkB,EAAElB,eAO1C,OACEN,IAAAC,cAAA,OAAKC,UAAWC,IAAER,YAChBK,IAAAC,cAAA,UAAI,YACJD,IAAAC,cAACwB,EAAmB,CAACd,SAPT,SAACe,GACf3B,EAAM4B,QAAQD,EAAOE,gBAOnB5B,IAAAC,cAAA,OAAKC,UAAWC,IAAEP,OAAQ0B,MCEjBO,EAFUC,YAdD,SAACC,GACvB,MAAO,CACLnC,MAAOmC,EAAMC,YAAYpC,MACzBgC,YAAaG,EAAMC,YAAYJ,cAGR,SAACK,GAC1B,MAAO,CACLN,QAAS,SAACC,GACRK,EAASC,YAAqBN,OAKXE,CAA6CV,oCC6BvDe,EA5CgB,SAACpC,GAAU,IAAAqC,EACVC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAAxCI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAAAI,EACAL,mBAAStC,EAAM4C,QAAOC,EAAAL,YAAAG,EAAA,GAA3CC,EAAMC,EAAA,GAAEC,EAASD,EAAA,GAEtBE,oBAAU,WACRD,EAAU9C,EAAM4C,SACf,CAAC5C,EAAM4C,SAeV,OACE3C,IAAAC,cAAA,YACIuC,GACAxC,IAAAC,cAAA,WACED,IAAAC,cAAA,QAAM8C,cAjBW,WACvBN,GAAY,KAiBH1C,EAAM4C,QAAU,YAItBH,GACCxC,IAAAC,cAAA,WACED,IAAAC,cAAA,SACE+C,SAhBa,SAACC,GACtBJ,EAAUI,EAAEC,cAAcC,QAgBlBC,WAAW,EACXC,OAvBiB,WACzBZ,GAAY,GACZ1C,EAAMuD,aAAaX,IAsBXQ,MAAOR,OCpBJY,EAdK,SAAHC,GAA0C,IAApCC,EAAOD,EAAPC,QAASd,EAAMa,EAANb,OAAQW,EAAYE,EAAZF,aACtC,OAAKG,EAIHzD,IAAAC,cAAA,WACED,IAAAC,cAAA,OAAKC,UAAWC,IAAET,kBAChBM,IAAAC,cAAA,OAAKG,IAAKqD,EAAQC,OAAOC,QACzB3D,IAAAC,cAACkC,EAAsB,CAACQ,OAAQA,EAAQW,aAAcA,MANnDtD,IAAAC,cAAC2D,IAAS,OCWNC,EAbC,SAAC9D,GACf,OACEC,IAAAC,cAAA,WACED,IAAAC,cAACsD,EAAW,CACVE,QAAS1D,EAAM0D,QACfd,OAAQ5C,EAAM4C,OACdW,aAAcvD,EAAMuD,eAEtBtD,IAAAC,cAAC4B,EAAgB,iCCDjBiC,EAAgB,SAAAC,GAAA,SAAAD,IAAA,OAAAE,YAAAC,KAAAH,GAAAI,YAAAD,KAAAE,YAAAL,GAAAM,MAAAH,KAAAI,YAanB,OAbmBC,YAAAR,EAAAC,GAAAQ,YAAAT,EAAA,EAAAU,IAAA,oBAAArB,MAAA,WAElB,IAAIsB,EAASR,KAAKlE,MAAM2E,OAAOC,OAAOF,OACjCA,IAEHA,EAASR,KAAKlE,MAAM6E,kBAEtBX,KAAKlE,MAAM8E,eAAeJ,GAC1BR,KAAKlE,MAAM+E,UAAUL,KACtB,CAAAD,IAAA,SAAArB,MAAA,WAGC,OAAOnD,IAAAC,cAAC4D,EAAYI,KAAKlE,WAC1B+D,EAbmB,CAAS9D,IAAM+E,WAuBtBC,sBACblD,YARsB,SAACC,GAAK,MAAM,CAClC0B,QAAS1B,EAAMC,YAAYyB,QAC3Bd,OAAQZ,EAAMC,YAAYW,OAC1BiC,iBAAkB7C,EAAMkD,KAAKR,OAC7BS,OAAQnD,EAAMkD,KAAKC,SAIM,CAAEL,mBAAgBC,cAAWxB,mBACtD6B,IACAC,IAHaJ,CAIblB","file":"static/js/2.1d0079ff.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__k4r5S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__zHyk5\",\"posts\":\"MyPosts_posts__8qy3i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3KWtH\"};","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src=\"https://images.pexels.com/photos/3153040/pexels-photo-3153040.jpeg?auto=compress&cs=tinysrgb&w=600&lazy=load\" />\r\n      {props.message}\r\n      <div>\r\n        <span>like</span> {props.likesCount}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../../../common/FormsControls/FormsControls\";\r\nimport {\r\n  maxLengthCreator,\r\n  required,\r\n} from \"../../../../utils/validators/validators\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          component={Textarea}\r\n          name=\"newPostText\"\r\n          validate={[required, maxLength10]}\r\n          placeholder=\"Enter your message\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default reduxForm({ form: \"ProfileAddNewPostForm\" })(AddNewPostForm);\r\n","import React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport AddNewPostFormRedux from \"./AddPostForm/AddPostForm\";\r\n\r\nconst MyPosts = React.memo((props) => {\r\n  let postsElements = props.posts.map((p) => (\r\n    <Post message={p.message} likesCount={p.likesCount} />\r\n  ));\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  };\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <AddNewPostFormRedux onSubmit={onAddPost} />\r\n      <div className={s.posts}>{postsElements}</div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default MyPosts;\r\n","import { connect } from \"react-redux\";\r\nimport { addPostActionCreator } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    },\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n          <span onDoubleClick={activateEditMode}>\r\n            {props.status || \"-------\"}\r\n          </span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            onChange={onStatusChange}\r\n            autoFocus={true}\r\n            onBlur={deactivateEditMode}\r\n            value={status}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus }) => {\r\n  if (!profile) {\r\n    return <Preloader />;\r\n  }\r\n  return (\r\n    <div>\r\n      <div className={s.descriptionBlock}>\r\n        <img src={profile.photos.large} />\r\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport s from \"./Profile.module.css\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getUserProfile,\r\n  getStatus,\r\n  updateStatus,\r\n} from \"../../redux/profile-reducer\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\nimport { withRouter } from \"../../utils/withRouter/withRouter\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.router.params.userId;\r\n    if (!userId) {\r\n      // userId = 19654;\r\n      userId = this.props.authorizedUserId;\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  render() {\r\n    return <Profile {...this.props} />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}